---
title: 'Week 10 | Matchups Recap and Teams Performances'
author: Giuliano Sposito
date: '2022-11-15T01:00:00-03:00'
slug: s22_w10_recap
categories:
  - recap
  - ranking
tags:
  - rank
  - recap
dropCap: yes
displayInMenu: no
displayInList: yes
resources:
- name: featuredImage
  src: "cover.jpg"
  params:
    description: cover
params:
  week: 10
---

<!--more-->

```{r setup, echo = FALSE, warning = FALSE, message = FALSE}
# put rnotbook in the same workdir
knitr::opts_knit$set(root.dir = normalizePath(rprojroot::find_rstudio_root_file())) 
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
```

```{r ranking}

library(yaml)
library(tidyverse)
library(glue)
library(ggimage)
library(ggridges)

# parameters
.week  <- params$week
config <- yaml.load_file("./config/config.yml")

```

```{r getRecap, results='hide'}
source("./R/api/ffa_league.R")

# RECAP

teams <- ffa_league_teams(config$authToken, config$leagueId) %>% 
  ffa_extractTeams()

recapResps <- teams$teamId %>% 
  map(~ffa_league_matchups_recap(config$authToken, config$leagueId, .week=.week, .teamId = .x))

recaps <- recapResps %>% 
  map_df(ffa_extractRecap) %>% 
  distinct()

# Performances

sim <- readRDS(glue("./data/simulation_v5_week{.week}_final.rds"))

player_performances <- inner_join(
  select(sim$players_sim, teamId, teamName, playerId, rosterSlotId, simulation.org),
  select(sim$players_stats, playerId, name, position, weekPts),
  by="playerId"
) %>% 
  unnest(weekPts) %>% 
  filter(week==.week, rosterSlotId < 20) %>% 
  unnest(simulation.org) %>% 
  #filter(teamId==10) %>% 
  mutate(name=glue("{name} ({position})")) %>% 
  mutate(position2=factor(position, levels = c("QB","WR","RB", "TE", "K", "DEF"),ordered = T)) %>% 
  # mutate(name=fct_reorder(name, -as.integer(position2))) %>% 
  mutate(name=fct_reorder(name, simulation.org))


```
## Teams Performances

```{r teamPerf}
sim$teams %>% 
  select(teamId, name, imageUrl, week.stats) %>% 
  unnest(week.stats) %>% 
  filter(week==.week) %>% 
  inner_join(sim$teams_sim, by="teamId") %>% 
  select(-simulation) %>% 
  rename(sim=simulation.org) %>%
  unnest(sim) %>% 
  mutate(name=fct_reorder(name, pts)) %>% 
  ggplot(aes(x=sim, y=name, fill=name)) +
  stat_density_ridges(quantile_lines = TRUE, quantiles = c(0.1,0.5,0.9), scale=1, alpha=.6) +
  geom_point(aes(x=pts, y=name), color="black", fill="red", shape=24) +
  theme_ridges() +
  theme( legend.position = "none" ) +
  scale_y_discrete(expand=c(0.,0)) +
  scale_x_continuous(expand = c(0.01,0)) +
  labs(x="points",y="")
```


## League Highlights

```{r highligths, results='asis'}
resp <- recaps[1,]$leagueHighligths[[1]]$text %>%
  map(function(.txt){
      .txt %>% paste0("\n\n") %>% cat()
  })

```


## Weekly Trophies

![Trophies](images/trophies.png)

```{r reverseGameWinner, eval=TRUE}
teamPts <- sim$teams %>% 
  select(teamId, week.stats) %>% 
  unnest(week.stats) %>% 
  select(-week)
# 
# 
# recaps %>% 
#   select(contains("away"),contains("home")) %>% 
#   left_join(teamPts, by=c("teamId.away"="teamId")) %>% 
#   rename(pts.away=pts) %>% 
#   left_join(teamPts, by=c("teamId.home"="teamId")) %>% 
#   rename(pts.home=pts) %>% 
#   mutate( potencial.away = pts.away - coachPoints.away,
#           potencial.home = pts.home - coachPoints.home) %>% 
#   select(away=name.away, pts.away, potencial.away, potencial.home, pts.home, home=name.home ) %>% 
#   mutate(reverse=(pts.away>pts.home)!=(potencial.away>potencial.home)) %>% 
#   mutate(reverse.away=(potencial.away>pts.home)&(pts.away<pts.home)) %>% 
#   mutate(reverse.home=(potencial.home>pts.away)&(pts.home<pts.away))
```

## Points left on bench


```{r benchPoints}
library(ggforce)

bind_rows(
  select(recaps, teamId=teamId.away, name=name.away, coachPoints=coachPoints.away),
  select(recaps, teamId=teamId.home, name=name.home, coachPoints=coachPoints.home)) %>% 
  inner_join(teamPts, by="teamId") %>% 
  mutate( benchPoints = -round(coachPoints,1),
          potencial = pts-coachPoints,
          name = fct_reorder(glue("{name} ({benchPoints})"), potencial)) %>% 
  ggplot(aes(color=benchPoints)) +
  geom_link(aes(y=name, x=potencial, yend=name, xend=pts, alpha=stat(index)), size=1, show.legend = F) +
  scale_color_gradient(low="darkgreen", high="darkred") +
  geom_text(aes(y=name, x=pts, label=round(pts)), color="black", size=2.7, hjust=1) +
  geom_text(aes(y=name, x=potencial, label=round(potencial)), color="darkgray", size=2.3, hjust=0) +
  labs(x="fantasy points", y="Team (points left in bench)", title="Best Roster Potential", subtitle="Actual Score vs Best Roster Score") +
  theme_light()
  
```



## Team Strengths and Weakness

```{r teamStrength}
starts_perf <- inner_join(
  select(sim$players_sim, teamId, teamName, playerId, rosterSlotId),
  select(sim$players_stats, playerId, name, position, weekPts),
  by="playerId"
) %>% 
  unnest(weekPts) %>% 
  filter(week==.week, rosterSlotId < 20) %>% 
  mutate(pos=factor(position, levels = c("DEF","K","TE","RB","WR","QB"),ordered = T)) %>% 
  select(teamId, teamName, pos, weekPts)

starts_perf %>% 
  group_by(teamId, teamName, pos) %>% 
  summarise( pts = sum(weekPts, na.rm = T)) %>% 
  group_by(pos) %>% 
  mutate( posAvg   = mean(pts),
          strength = pts - posAvg) %>% 
  group_by(teamId, teamName) %>% 
  mutate( totalPts = round(sum(pts),1) ) %>% 
  ungroup() %>% 
  mutate( teamName = fct_reorder(glue("{teamName} ({totalPts})"), -totalPts)) %>% 
  ggplot(aes(x=pos, y=strength, color=strength>=0, fill=strength>=0)) +
  geom_point() +
  geom_bar(stat = "identity", width=.1) +
  geom_hline(yintercept = 0, color="grey", lty="dashed") +
  coord_flip() +
  facet_wrap(teamName~.) +
  labs(x="", y="", title="Position Strength", subtitle = "Team Position Points vs Starts Average") + 
  theme_light() +
  theme(legend.position = "none")
```



## Matchups Recap

```{r listRecap, results='asis'}
resps <- recaps %>% 
  split(1:nrow(.)) %>% 
  map(function(.recap, .pperf, .sim){
    
    # gp <- .sim$teams %>% 
    #   filter(teamId %in% c(.recap$teamId.away, .recap$teamId.home)) %>% 
    #   select(teamId, name, imageUrl, week.stats) %>% 
    #   unnest(week.stats) %>% 
    #   filter(week==.week) %>% 
    #   inner_join(sim$teams_sim, by="teamId") %>% 
    #   select(-simulation) %>% 
    #   rename(sim=simulation.org) %>%
    #   unnest(sim) %>% 
    #   mutate(name=fct_reorder(name, pts)) %>% 
    #   ggplot(aes(x=sim, y=name, fill=name)) +
    #   stat_density_ridges(quantile_lines = TRUE, quantiles = c(0.1,0.5,0.9), scale=1, alpha=.6) +
    #   geom_point(aes(x=pts, y=name), color="black", fill="red", shape=24) +
    #   theme_ridges() +
    #   theme( legend.position = "none" ) +
    #   #scale_y_discrete(expand=c(0.,0)) +
    #   scale_x_continuous(expand = c(0.01,0)) +
    #   labs(x="points",y="")
    
    # recap
    cat(paste0("### ", .recap$title), "\n\n")
    
    # print(gp)
    # cat("\n\n")    
    
    .recap$paragraphs %>% map(function(.par){
      .par$text %>% paste0("\n\n") %>% cat()
    })
    
    # perform
    c(.recap$teamId.away, .recap$teamId.home) %>% 
      map(function(.teamId, .pperf){
        
        perf <- .pperf %>% 
          filter(teamId==.teamId)
        
        g <- perf %>% 
          mutate(name=fct_reorder(name, weekPts)) %>%
          ggplot(aes(x=simulation.org, y=name, fill=position)) +
            stat_density_ridges(quantile_lines = TRUE, 
                                quantiles = c(0.1,0.5,0.9), scale=1, alpha=.6) +
            geom_point(aes(x=weekPts, y=name), color="black", fill="red", shape=24) +
            theme_ridges() +
            theme( legend.position = "none" ) +
            scale_y_discrete(expand=c(0.1,0)) +
            scale_x_continuous(expand = c(0.01,0)) +
            labs(x="points",y="")
        
        cat(glue("#### {team}\n\n", team=perf[1,]$teamName))    
        print(g)
        cat("\n\n")
      
      }, .pperf=.pperf)
    
  }, .pperf = player_performances, .sim=sim)
```

